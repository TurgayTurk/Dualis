<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <AssemblyName>Dualis</AssemblyName>
    <RootNamespace>Dualis</RootNamespace>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>

    <!-- NuGet package metadata -->
    <PackageId>Dualis</PackageId>
    <Version>0.2.3</Version>
    <Authors>Turgay Turk</Authors>
    <Company></Company>
    <Description>Mediator-like CQRS + pipeline behaviors + notifications with source generator for minimal overhead.</Description>
    <PackageTags>mediator;CQRS;pipeline;source-generator;notifications;dotnet</PackageTags>
    <RepositoryUrl>https://github.com/TurgayTurk/Dualis</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/TurgayTurk/Dualis</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>logo.png</PackageIcon>
    <PackageReleaseNotes>See CHANGELOG.md for full details: https://github.com/TurgayTurk/Dualis/blob/main/CHANGELOG.md</PackageReleaseNotes>

    <!-- Pack settings -->
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <DebugType>portable</DebugType>

    <!-- SourceLink & determinism -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>

    <!-- Ensure XML docs are included in the NuGet package -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.xml</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" />
    <PackageReference Include="Microsoft.Extensions.Options" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All" />
  </ItemGroup>

  <!-- IDE-only analyzer reference for rich experience while editing in VS.
       Disabled during Pack (IsPack=true) to avoid TFM mismatch and rely on explicit analyzer assets below. -->
  <ItemGroup>
    <ProjectReference Include="..\SourceGen\SourceGen.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" Condition="'$(BuildingInsideVisualStudio)' == 'true' and '$(IsPack)' != 'true'" />
  </ItemGroup>

  <!-- Explicit analyzer assets to guarantee packaging layout under analyzers/dotnet/cs -->
  <ItemGroup>
    <None Include="..\SourceGen\bin\$(Configuration)\netstandard2.0\Dualis.SourceGen.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Condition="Exists('..\\SourceGen\\bin\\$(Configuration)\\netstandard2.0\\Dualis.SourceGen.dll')" Visible="false" />
    <None Include="..\SourceGen\bin\$(Configuration)\netstandard2.0\Dualis.SourceGen.xml" Pack="true" PackagePath="analyzers/dotnet/cs" Condition="Exists('..\\SourceGen\\bin\\$(Configuration)\\netstandard2.0\\Dualis.SourceGen.xml')" Visible="false" />
  </ItemGroup>

  <!-- Build the generator before packing this package so the DLL exists -->
  <Target Name="BuildSourceGenBeforePack" BeforeTargets="Pack">
    <MSBuild Projects="..\SourceGen\SourceGen.csproj" Targets="Build" Properties="Configuration=$(Configuration)" />
  </Target>

  <!-- Include solution README, changelog and icon in the package root -->
  <ItemGroup>
    <None Include="..\..\README.md" Pack="true" PackagePath="/" />
    <None Include="..\..\CHANGELOG.md" Pack="true" PackagePath="/" />
    <None Include="..\..\logo.png" Pack="true" PackagePath="/" Visible="false" />

    <!-- Make MSBuild property DualisEnableGenerator visible to analyzers for consumers via buildTransitive -->
    <!-- Removed buildTransitive Dualis.globalconfig to avoid enabling generator in all referencing projects by default -->
  </ItemGroup>
</Project>
